/*
Deployment script for DentalDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DentalDB"
:setvar DefaultFilePrefix "DentalDB"
:setvar DefaultDataPath "D:\MSSQL\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "D:\MSSQL\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[MouthType].[Name] on table [dbo].[MouthType] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[MouthType])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[UserType].[Name] on table [dbo].[UserType] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[UserType])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Rename refactoring operation with key 94d4cbd2-8b2e-4901-a8ed-9c91c106076c is skipped, element [dbo].[ScheduleMaster].[DentisId] (SqlSimpleColumn) will not be renamed to DentistId';


GO
PRINT N'The following operation was generated from a refactoring log file c2fb1b46-6ba4-43ed-b1a1-abd72c2d4b8c';

PRINT N'Rename [dbo].[DiagnosisType].[Description] to Name';


GO
EXECUTE sp_rename @objname = N'[dbo].[DiagnosisType].[Description]', @newname = N'Name', @objtype = N'COLUMN';


GO
PRINT N'Dropping DF__Diagnosis__Statu__4AB81AF0...';


GO
ALTER TABLE [dbo].[DiagnosisType] DROP CONSTRAINT [DF__Diagnosis__Statu__4AB81AF0];


GO
PRINT N'Dropping DF__MouthType__Statu__4D94879B...';


GO
ALTER TABLE [dbo].[MouthType] DROP CONSTRAINT [DF__MouthType__Statu__4D94879B];


GO
PRINT N'Dropping DF__UserType__Status__59FA5E80...';


GO
ALTER TABLE [dbo].[UserType] DROP CONSTRAINT [DF__UserType__Status__59FA5E80];


GO
PRINT N'Dropping FK_PatientDiagnosisHistoryDetail_DiagnosisTypeId...';


GO
ALTER TABLE [dbo].[PatientDiagnosisHistoryDetail] DROP CONSTRAINT [FK_PatientDiagnosisHistoryDetail_DiagnosisTypeId];


GO
PRINT N'Dropping FK_MouthType_ImageUrlId...';


GO
ALTER TABLE [dbo].[MouthType] DROP CONSTRAINT [FK_MouthType_ImageUrlId];


GO
PRINT N'Dropping FK_PatientMouth_MouthTypeId...';


GO
ALTER TABLE [dbo].[PatientMouth] DROP CONSTRAINT [FK_PatientMouth_MouthTypeId];


GO
PRINT N'Dropping FK_Tooth_MouthTypeId...';


GO
ALTER TABLE [dbo].[Tooth] DROP CONSTRAINT [FK_Tooth_MouthTypeId];


GO
PRINT N'Dropping FK_User_UserTypeId...';


GO
ALTER TABLE [dbo].[User] DROP CONSTRAINT [FK_User_UserTypeId];


GO
PRINT N'Starting rebuilding table [dbo].[DiagnosisType]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_DiagnosisType] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (100) NOT NULL,
    [Description] VARCHAR (200) NULL,
    [Status]      INT           DEFAULT 1 NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[DiagnosisType])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_DiagnosisType] ON;
        INSERT INTO [dbo].[tmp_ms_xx_DiagnosisType] ([Id], [Name], [Status])
        SELECT   [Id],
                 [Name],
                 [Status]
        FROM     [dbo].[DiagnosisType]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_DiagnosisType] OFF;
    END

DROP TABLE [dbo].[DiagnosisType];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_DiagnosisType]', N'DiagnosisType';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[MouthType]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_MouthType] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (50)  NOT NULL,
    [Description] VARCHAR (100) NOT NULL,
    [ImageUrlId]  INT           NULL,
    [Status]      INT           DEFAULT 1 NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[MouthType])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MouthType] ON;
        INSERT INTO [dbo].[tmp_ms_xx_MouthType] ([Id], [Description], [ImageUrlId], [Status])
        SELECT   [Id],
                 [Description],
                 [ImageUrlId],
                 [Status]
        FROM     [dbo].[MouthType]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MouthType] OFF;
    END

DROP TABLE [dbo].[MouthType];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_MouthType]', N'MouthType';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[UserType]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserType] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (20)  NOT NULL,
    [Description] VARCHAR (100) NOT NULL,
    [Status]      INT           DEFAULT 1 NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserType])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserType] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserType] ([Id], [Description], [Status])
        SELECT   [Id],
                 [Description],
                 [Status]
        FROM     [dbo].[UserType]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserType] OFF;
    END

DROP TABLE [dbo].[UserType];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserType]', N'UserType';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[DentalMenu]...';


GO
CREATE TABLE [dbo].[DentalMenu] (
    [Id]          INT           NOT NULL,
    [UserTypeId]  INT           NULL,
    [Name]        VARCHAR (100) NOT NULL,
    [Description] VARCHAR (200) NULL,
    [Status]      INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ScheduleDetail]...';


GO
CREATE TABLE [dbo].[ScheduleDetail] (
    [Id]               INT      NOT NULL,
    [ScheduleMasterId] INT      NOT NULL,
    [From]             TIME (7) NOT NULL,
    [To]               TIME (7) NOT NULL,
    [Status]           INT      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ScheduleMaster]...';


GO
CREATE TABLE [dbo].[ScheduleMaster] (
    [Id]        INT  IDENTITY (1, 1) NOT NULL,
    [Date]      DATE NOT NULL,
    [DentistId] INT  NOT NULL,
    [Status]    INT  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Default Constraint on [dbo].[DentalMenu]....';


GO
ALTER TABLE [dbo].[DentalMenu]
    ADD DEFAULT 1 FOR [Status];


GO
PRINT N'Creating Default Constraint on [dbo].[ScheduleMaster]....';


GO
ALTER TABLE [dbo].[ScheduleMaster]
    ADD DEFAULT 1 FOR [Status];


GO
PRINT N'Creating FK_PatientDiagnosisHistoryDetail_DiagnosisTypeId...';


GO
ALTER TABLE [dbo].[PatientDiagnosisHistoryDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_PatientDiagnosisHistoryDetail_DiagnosisTypeId] FOREIGN KEY ([DiagnosisTypeId]) REFERENCES [dbo].[DiagnosisType] ([Id]) ON DELETE SET NULL;


GO
PRINT N'Creating FK_MouthType_ImageUrlId...';


GO
ALTER TABLE [dbo].[MouthType] WITH NOCHECK
    ADD CONSTRAINT [FK_MouthType_ImageUrlId] FOREIGN KEY ([ImageUrlId]) REFERENCES [dbo].[ImageUrl] ([Id]) ON DELETE SET NULL;


GO
PRINT N'Creating FK_PatientMouth_MouthTypeId...';


GO
ALTER TABLE [dbo].[PatientMouth] WITH NOCHECK
    ADD CONSTRAINT [FK_PatientMouth_MouthTypeId] FOREIGN KEY ([MouthTypeId]) REFERENCES [dbo].[MouthType] ([Id]) ON DELETE SET NULL;


GO
PRINT N'Creating FK_Tooth_MouthTypeId...';


GO
ALTER TABLE [dbo].[Tooth] WITH NOCHECK
    ADD CONSTRAINT [FK_Tooth_MouthTypeId] FOREIGN KEY ([MouthTypeId]) REFERENCES [dbo].[MouthType] ([Id]);


GO
PRINT N'Creating FK_User_UserTypeId...';


GO
ALTER TABLE [dbo].[User] WITH NOCHECK
    ADD CONSTRAINT [FK_User_UserTypeId] FOREIGN KEY ([UserTypeId]) REFERENCES [dbo].[UserType] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating FK_DentalMenu_UserTypeId...';


GO
ALTER TABLE [dbo].[DentalMenu] WITH NOCHECK
    ADD CONSTRAINT [FK_DentalMenu_UserTypeId] FOREIGN KEY ([UserTypeId]) REFERENCES [dbo].[UserType] ([Id]) ON DELETE SET NULL;


GO
PRINT N'Creating FK_ScheduleDetail_ScheduLeMasterId...';


GO
ALTER TABLE [dbo].[ScheduleDetail] WITH NOCHECK
    ADD CONSTRAINT [FK_ScheduleDetail_ScheduLeMasterId] FOREIGN KEY ([ScheduleMasterId]) REFERENCES [dbo].[ScheduleMaster] ([Id]);


GO
PRINT N'Creating FK_ScheduleMaster_DentistId...';


GO
ALTER TABLE [dbo].[ScheduleMaster] WITH NOCHECK
    ADD CONSTRAINT [FK_ScheduleMaster_DentistId] FOREIGN KEY ([DentistId]) REFERENCES [dbo].[DentistInformation] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '94d4cbd2-8b2e-4901-a8ed-9c91c106076c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('94d4cbd2-8b2e-4901-a8ed-9c91c106076c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c2fb1b46-6ba4-43ed-b1a1-abd72c2d4b8c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c2fb1b46-6ba4-43ed-b1a1-abd72c2d4b8c')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[PatientDiagnosisHistoryDetail] WITH CHECK CHECK CONSTRAINT [FK_PatientDiagnosisHistoryDetail_DiagnosisTypeId];

ALTER TABLE [dbo].[MouthType] WITH CHECK CHECK CONSTRAINT [FK_MouthType_ImageUrlId];

ALTER TABLE [dbo].[PatientMouth] WITH CHECK CHECK CONSTRAINT [FK_PatientMouth_MouthTypeId];

ALTER TABLE [dbo].[Tooth] WITH CHECK CHECK CONSTRAINT [FK_Tooth_MouthTypeId];

ALTER TABLE [dbo].[User] WITH CHECK CHECK CONSTRAINT [FK_User_UserTypeId];

ALTER TABLE [dbo].[DentalMenu] WITH CHECK CHECK CONSTRAINT [FK_DentalMenu_UserTypeId];

ALTER TABLE [dbo].[ScheduleDetail] WITH CHECK CHECK CONSTRAINT [FK_ScheduleDetail_ScheduLeMasterId];

ALTER TABLE [dbo].[ScheduleMaster] WITH CHECK CHECK CONSTRAINT [FK_ScheduleMaster_DentistId];


GO
PRINT N'Update complete.';


GO
